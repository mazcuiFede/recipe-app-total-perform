{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend-total-performance\\\\total-recipes\\\\src\\\\Components\\\\RecipesScreen\\\\index.js\";\nimport React, { Component } from 'react';\nimport RecipeList from '../RecipeList';\nimport RecipeSearch from '../RecipeSearch';\nimport { Col, Row } from 'react-flexbox-grid';\nimport getRecipes from './../../services/getRecipes';\nimport PropTypes from 'prop-types';\nconst laData = {\n  nombre: \"mati\",\n  edad: \"26\"\n};\n\nclass Recipes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = e => {\n      this.setState({\n        textToSearch: e.target.value\n      });\n      fetch(getRecipes(this.state.textToSearch)).then(resolve => {\n        return resolve.json();\n      }).then(data => {\n        this.setState({\n          data\n        });\n      });\n    };\n\n    this.searchRecipes = textToSearch => {} //console.log(\"tts\", textToSearch)\n    //  fetch(getRecipes(textToSearch)).then( resolve => {\n    //      return resolve.json()\n    //  }).then(data => {\n    //      this.setState({\n    //          data\n    //      })\n    //  })\n    // componentDidMount(){\n    //     this.searchRecipes(this.state.textToSearch)\n    // }\n    ;\n\n    this.state = {\n      textToSearch: '',\n      data: null\n    };\n  }\n\n  render() {\n    const {\n      data,\n      num\n    } = this.state;\n    let recipes = data ? data.recipes.map(recipe => recipe) : '';\n    console.log(\"Soy recipe\", recipes);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RecipeSearch, {\n      handleSearch: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mb-3 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, \"List of recipes\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RecipeList, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nRecipes.propTypes = {};\nexport default Recipes;","map":{"version":3,"sources":["C:/frontend-total-performance/total-recipes/src/Components/RecipesScreen/index.js"],"names":["React","Component","RecipeList","RecipeSearch","Col","Row","getRecipes","PropTypes","laData","nombre","edad","Recipes","constructor","props","handleSearch","e","setState","textToSearch","target","value","fetch","state","then","resolve","json","data","searchRecipes","render","num","recipes","map","recipe","console","log","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAwB,oBAAxB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,MAAM,EAAE,MAAV;AAAkBC,EAAAA,IAAI,EAAC;AAAvB,CAAf;;AAEA,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAC5BW,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,YARkB,GAQFC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAxB,OAAd;AAEAC,MAAAA,KAAK,CAACd,UAAU,CAAC,KAAKe,KAAL,CAAWJ,YAAZ,CAAX,CAAL,CAA2CK,IAA3C,CAAiDC,OAAO,IAAI;AACxD,eAAOA,OAAO,CAACC,IAAR,EAAP;AACH,OAFD,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACX,aAAKT,QAAL,CAAc;AACVS,UAAAA;AADU,SAAd;AAGJ,OAND;AAOH,KAlBiB;;AAAA,SAoBlBC,aApBkB,GAoBDT,YAAD,IAAkB,CASjC,CATe,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACA;AACA;AAjCkB;;AAEd,SAAKI,KAAL,GAAa;AACTJ,MAAAA,YAAY,EAAE,EADL;AAETQ,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AA6BDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA,IAAF;AAAQG,MAAAA;AAAR,QAAgB,KAAKP,KAA3B;AAEA,QAAIQ,OAAO,GAAGJ,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAaC,GAAb,CAAkBC,MAAD,IAAYA,MAA7B,CAAH,GAA0C,EAA5D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,OAA1B;AAEA,wBAEI,uDACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAE,KAAKf,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,CAPJ,eAYI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEW,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJJ,CAZJ,CAFJ;AAwBH;;AAlE2B;;AAqEhCd,OAAO,CAACuB,SAAR,GAAoB,EAApB;AAGA,eAAevB,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport RecipeList from '../RecipeList'\r\nimport RecipeSearch from '../RecipeSearch'\r\nimport { Col, Row} from 'react-flexbox-grid'\r\nimport getRecipes from './../../services/getRecipes'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst laData = { nombre: \"mati\", edad:\"26\"}\r\n\r\nclass Recipes extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            textToSearch: '',\r\n            data: null\r\n        }\r\n    }\r\n\r\n    handleSearch = (e) => {\r\n        this.setState({textToSearch: e.target.value})\r\n\r\n        fetch(getRecipes(this.state.textToSearch)).then( resolve => {\r\n            return resolve.json()\r\n        }).then(data => {\r\n             this.setState({\r\n                 data\r\n             })\r\n        })\r\n    }\r\n    \r\n    searchRecipes = (textToSearch) => {\r\n        //console.log(\"tts\", textToSearch)\r\n        //  fetch(getRecipes(textToSearch)).then( resolve => {\r\n        //      return resolve.json()\r\n        //  }).then(data => {\r\n        //      this.setState({\r\n        //          data\r\n        //      })\r\n        //  })\r\n    }     \r\n    \r\n    // componentDidMount(){\r\n    //     this.searchRecipes(this.state.textToSearch)\r\n    // }\r\n\r\n    render() {\r\n        const { data, num } = this.state\r\n\r\n        let recipes = data ? data.recipes.map((recipe) => recipe) : ''\r\n        console.log(\"Soy recipe\", recipes)\r\n\r\n        return (\r\n            \r\n            <>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                    <RecipeSearch handleSearch={this.handleSearch}></RecipeSearch>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <h2 className=\"mb-3 mt-4\">List of recipes</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <div>\r\n                    \r\n                    </div>\r\n                    <div>\r\n                    <RecipeList data={data}></RecipeList>\r\n                    </div>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nRecipes.propTypes = {\r\n};\r\n\r\nexport default Recipes;"]},"metadata":{},"sourceType":"module"}