{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend-total-performance\\\\total-recipes\\\\src\\\\Components\\\\RecipeList\\\\index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col } from 'react-flexbox-grid';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Star from '@material-ui/icons/Star';\nimport StarHalf from '@material-ui/icons/StarHalf';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport Recipe from './Recipe';\nimport './styles.css';\n\nclass RecipeList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdateClick = () => {\n      fetch(getUrlWeatherByCity(this.state.city)).then(resolve => {\n        return resolve.json();\n      }).then(data => {\n        const newWeather = transformWeather(data);\n        this.setState({\n          data: newWeather\n        });\n      });\n    };\n\n    this.state = {\n      showModal: false,\n      title: \"Title\",\n      steps: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n    };\n  }\n\n  componentDidMount() {\n    this.handleUpdateClick();\n  }\n\n  handleModal(showModal) {\n    this.setState({\n      showModal\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Recipe, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nRecipeList.propTypes = {};\nexport default RecipeList;","map":{"version":3,"sources":["C:/frontend-total-performance/total-recipes/src/Components/RecipeList/index.js"],"names":["React","Component","PropTypes","Col","Card","Button","Modal","Star","StarHalf","StarBorder","Recipe","RecipeList","constructor","props","handleUpdateClick","fetch","getUrlWeatherByCity","state","city","then","resolve","json","data","newWeather","transformWeather","setState","showModal","title","steps","componentDidMount","handleModal","render","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,cAAP;;AAEA,MAAMC,UAAN,SAAyBV,SAAzB,CAAmC;AAC/BW,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAalBC,iBAbkB,GAaE,MAAM;AACtBC,MAAAA,KAAK,CAACC,mBAAmB,CAAC,KAAKC,KAAL,CAAWC,IAAZ,CAApB,CAAL,CAA4CC,IAA5C,CAAkDC,OAAO,IAAI;AACzD,eAAOA,OAAO,CAACC,IAAR,EAAP;AACH,OAFD,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,cAAMC,UAAU,GAAGC,gBAAgB,CAACF,IAAD,CAAnC;AACA,aAAKG,QAAL,CAAc;AACVH,UAAAA,IAAI,EAAEC;AADI,SAAd;AAGH,OAPD;AAQH,KAtBiB;;AAEd,SAAKN,KAAL,GAAa;AACTS,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,KAAK,EAAE,OAFE;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,iBAAL;AACH;;AAaDgB,EAAAA,WAAW,CAACJ,SAAD,EAAW;AAClB,SAAKD,QAAL,CAAe;AAACC,MAAAA;AAAD,KAAf;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAjC8B;;AAoCnCpB,UAAU,CAACqB,SAAX,GAAuB,EAAvB;AAIA,eAAerB,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Col } from 'react-flexbox-grid'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Star from '@material-ui/icons/Star'\r\nimport StarHalf from '@material-ui/icons/StarHalf'\r\nimport StarBorder from '@material-ui/icons/StarBorder'\r\nimport Recipe from './Recipe'\r\nimport './styles.css'\r\n\r\nclass RecipeList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            showModal: false,\r\n            title: \"Title\",\r\n            steps: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.handleUpdateClick()\r\n    }\r\n    \r\n    handleUpdateClick = () => {\r\n        fetch(getUrlWeatherByCity(this.state.city)).then( resolve => {\r\n            return resolve.json()\r\n        }).then(data => {\r\n            const newWeather = transformWeather(data)\r\n            this.setState({\r\n                data: newWeather\r\n            })\r\n        })\r\n    }\r\n\r\n    handleModal(showModal){\r\n        this.setState( {showModal })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Recipe></Recipe>\r\n        );\r\n    }\r\n}\r\n\r\nRecipeList.propTypes = {\r\n\r\n};\r\n\r\nexport default RecipeList;"]},"metadata":{},"sourceType":"module"}