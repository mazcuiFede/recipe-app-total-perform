{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend-total-performance\\\\total-recipes\\\\src\\\\Components\\\\Recipe\\\\RecipeScore.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Row, Col } from 'react-flexbox-grid';\nimport putRecipeCalification from '../../services/putRecipeCalification';\n\nclass RecipeScore extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        rateValue: event.target.value\n      });\n    };\n\n    const {\n      id\n    } = this.props;\n    let messageRate = '';\n    this.state = {\n      rateValue: '1',\n      id\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    let {\n      id,\n      rateValue\n    } = this.state;\n    fetch(putRecipeCalification(id, rateValue));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, \"5\"))), /*#__PURE__*/React.createElement(Col, {\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, \"Send!\")), /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, messageRate))));\n  }\n\n}\n\nRecipeScore.propTypes = {\n  id: PropTypes.string.isRequired\n};\nexport default RecipeScore;","map":{"version":3,"sources":["C:/frontend-total-performance/total-recipes/src/Components/Recipe/RecipeScore.js"],"names":["React","Component","PropTypes","Form","Button","Row","Col","putRecipeCalification","RecipeScore","constructor","props","handleChange","event","setState","rateValue","target","value","id","messageRate","state","bind","handleSubmit","fetch","render","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,oBAAzB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAejBC,YAfiB,GAeFC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAzB,OAAd;AACD,KAjBgB;;AAGf,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKP,KAApB;AACA,QAAIQ,WAAW,GAAG,EAAlB;AAEA,SAAKC,KAAL,GAAa;AACTL,MAAAA,SAAS,EAAE,GADF;AAETG,MAAAA;AAFS,KAAb;AAKA,SAAKN,YAAL,GAAoB,KAAKA,YAAL,CAAkBS,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAMHC,EAAAA,YAAY,GAAG;AACX,QAAI;AAACJ,MAAAA,EAAD;AAAKH,MAAAA;AAAL,QAAmB,KAAKK,KAA5B;AACAG,IAAAA,KAAK,CAACf,qBAAqB,CAACU,EAAD,EAAKH,SAAL,CAAtB,CAAL;AAEH;;AAECS,EAAAA,MAAM,GAAG;AACP,wBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAElB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE,KAAKc,KAAL,CAAWH,KAA5C;AAAmD,MAAA,QAAQ,EAAE,KAAKL,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,CADJ,CADJ,eAUI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKU,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAVJ,eAeI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMH,WAAN,CADJ,CAfJ,CADJ,CADJ;AAuBH;;AAlD+B;;AAqDpCV,WAAW,CAACgB,SAAZ,GAAwB;AACpBP,EAAAA,EAAE,EAAEf,SAAS,CAACuB,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAelB,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Row, Col } from 'react-flexbox-grid'\r\nimport putRecipeCalification from '../../services/putRecipeCalification'\r\n\r\nclass RecipeScore extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { id } = this.props\r\n        let messageRate = ''\r\n\r\n        this.state = {\r\n            rateValue: '1',\r\n            id\r\n        };\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange =(event) => {\r\n        this.setState({rateValue: event.target.value});\r\n      }\r\n    \r\n    handleSubmit() {\r\n        let {id, rateValue } = this.state\r\n        fetch(putRecipeCalification(id, rateValue))\r\n\r\n    }\r\n      \r\n      render() {\r\n        return (\r\n            <Form>\r\n                <Form.Group as={Row}>\r\n                    <Col xs={8}>\r\n                        <Form.Control as=\"select\" value={this.state.value} onChange={this.handleChange}>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                    <Col xs={4}>                        \r\n                        <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n                            Send!\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs=\"12\">\r\n                        <div>{messageRate}</div>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nRecipeScore.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RecipeScore;"]},"metadata":{},"sourceType":"module"}