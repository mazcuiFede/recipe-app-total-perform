{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend-total-performance\\\\total-recipes\\\\src\\\\Components\\\\Recipe\\\\Ingredients.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\n\nclass Ingredients extends Component {\n  constructor() {\n    super();\n\n    this.handleUpdateClick = () => {\n      console.log(\"Actualizado\");\n    };\n\n    const {\n      ingredients\n    } = this.props;\n    this.state = {\n      servings: 2,\n      ingredients\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \"Servings:\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleUpdateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, \"Actualizar\")), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"To make this recipe you will need:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, this.state.ingredients.map(recipe => /*#__PURE__*/React.createElement(\"li\", {\n      key: recipe.name + recipe.quantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 66\n      }\n    }, `${recipe.quantity * this.state.servings} ${recipe.unit} of ${recipe.name}`)))));\n  }\n\n}\n\nIngredients.propTypes = {};\nexport default Ingredients;","map":{"version":3,"sources":["C:/frontend-total-performance/total-recipes/src/Components/Recipe/Ingredients.js"],"names":["React","Component","Card","PropTypes","Ingredients","constructor","handleUpdateClick","console","log","ingredients","props","state","servings","render","map","recipe","name","quantity","unit","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,WAAW,GAAE;AACT;;AADS,SASbC,iBATa,GASO,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KAXY;;AAET,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AACA,SAAKC,KAAL,GAAc;AACVC,MAAAA,QAAQ,EAAE,CADA;AAEVH,MAAAA;AAFU,KAAd;AAIH;;AAODI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAGI;AAAQ,MAAA,OAAO,EAAE,KAAKP,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADJ,eAMI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADA,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM,KAAKK,KAAL,CAAWF,WAAX,CAAuBK,GAAvB,CAA4BC,MAAD,iBAAY;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,GAAEF,MAAM,CAACE,QAAP,GAAkB,KAAKN,KAAL,CAAWC,QAAS,IAAGG,MAAM,CAACG,IAAK,OAAMH,MAAM,CAACC,IAAK,EAAnH,CAAvC,CAFN,CAFJ,CANJ,CADJ;AAgBH;;AAhC+B;;AAmCpCZ,WAAW,CAACe,SAAZ,GAAwB,EAAxB;AAIA,eAAef,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Ingredients extends Component {\r\n    constructor(){\r\n        super()\r\n        const { ingredients } = this.props\r\n        this.state = ({\r\n            servings: 2,\r\n            ingredients\r\n        })\r\n    }\r\n\r\n    handleUpdateClick = () => {\r\n        console.log(\"Actualizado\")\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card.Text>\r\n                    Servings:\r\n                    {/* <input type=\"number\" className=\"ml-2\" onChange={this.handleChange}/> */}\r\n                    <button onClick={this.handleUpdateClick}>Actualizar</button>\r\n                </Card.Text>\r\n                <Card.Body> \r\n                <Card.Text>To make this recipe you will need:</Card.Text>\r\n                    <ul>\r\n                        {/* Improve key */}\r\n                        { this.state.ingredients.map((recipe) => <li key={recipe.name + recipe.quantity}>{`${recipe.quantity * this.state.servings} ${recipe.unit} of ${recipe.name}`}</li>)}\r\n                    </ul>\r\n                </Card.Body>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nIngredients.propTypes = {\r\n\r\n};\r\n\r\nexport default Ingredients;"]},"metadata":{},"sourceType":"module"}