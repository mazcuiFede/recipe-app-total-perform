{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend-total-performance\\\\total-recipes\\\\src\\\\Components\\\\RecipeList\\\\index.js\";\nimport React, { Component } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Recipe from './Recipe';\nimport PropTypes from 'prop-types'; //import getRecipes from './../../services/getRecipes'\n\nimport './styles.css';\n\nclass RecipeList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchRecipes = textToSearch => {//   fetch(`${getRecipes()}/${e.target.value}`).then( resolve => {\n      //         return resolve.json()\n      //     }).then(data => {\n      //         this.setState({\n      //             data\n      //         })\n      //     })\n    };\n\n    const {\n      textToSearch\n    } = props;\n    this.state = {\n      textToSearch\n    };\n  }\n\n  render() {\n    //  if (data) {\n    //      let recipes = data.recipes.map((recipe) => recipe)\n    //      console.log(recipes)\n    //  }\n    console.log(\"list\", this.props.textToSearch);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, this.props.textToSearch));\n  }\n\n}\n\nRecipeList.propTypes = {\n  textToSearch: PropTypes.string.isRequired\n};\nexport default RecipeList;","map":{"version":3,"sources":["C:/frontend-total-performance/total-recipes/src/Components/RecipeList/index.js"],"names":["React","Component","CircularProgress","Recipe","PropTypes","RecipeList","constructor","props","searchRecipes","textToSearch","state","render","console","log","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAO,cAAP;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAUlBC,aAVkB,GAUDC,YAAD,IAAkB,CAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACC,KAlBiB;;AAGd,UAAM;AAACA,MAAAA;AAAD,QAAiBF,KAAvB;AAEA,SAAKG,KAAL,GAAa;AACTD,MAAAA;AADS,KAAb;AAGH;;AAYDE,EAAAA,MAAM,GAAG;AAEL;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB,KAAKN,KAAL,CAAWE,YAA9B;AACA,wBACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWE,YAAhB,CADA,CADJ;AAMH;;AAlC8B;;AAqCnCJ,UAAU,CAACS,SAAX,GAAuB;AACnBL,EAAAA,YAAY,EAAEL,SAAS,CAACW,MAAV,CAAiBC;AADZ,CAAvB;AAIA,eAAeX,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Recipe from './Recipe'\r\nimport PropTypes from 'prop-types';\r\n//import getRecipes from './../../services/getRecipes'\r\nimport './styles.css'\r\n\r\nclass RecipeList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        const {textToSearch} = props\r\n\r\n        this.state = {\r\n            textToSearch\r\n        }\r\n    }\r\n\r\n    searchRecipes = (textToSearch) => {\r\n    //   fetch(`${getRecipes()}/${e.target.value}`).then( resolve => {\r\n    //         return resolve.json()\r\n    //     }).then(data => {\r\n    //         this.setState({\r\n    //             data\r\n    //         })\r\n    //     })\r\n    }\r\n\r\n    render() {\r\n                \r\n        //  if (data) {\r\n        //      let recipes = data.recipes.map((recipe) => recipe)\r\n        //      console.log(recipes)\r\n        //  }\r\n        console.log(\"list\",this.props.textToSearch)\r\n        return (\r\n            <>\r\n            <h1>{this.props.textToSearch}</h1>\r\n                {/* { data ? data.recipes.map((recipe) => ( <Recipe recipe={recipe} key={recipe.name}></Recipe> )) : <CircularProgress size={80} /> } */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nRecipeList.propTypes = {\r\n    textToSearch: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RecipeList;"]},"metadata":{},"sourceType":"module"}