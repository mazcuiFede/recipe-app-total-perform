{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend-total-performance\\\\total-recipes\\\\src\\\\Components\\\\Recipe\\\\Ingredients.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\n\nconst handleChange = (event, props) => {\n  console.log(event.target.value);\n};\n\nconst Ingredients = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Servings:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"ml-2\",\n    onChange: handleChange(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"To make this recipe you will need:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, props.ingredients.map(recipe => /*#__PURE__*/React.createElement(\"li\", {\n    key: recipe.name + recipe.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 57\n    }\n  }, `${recipe.quantity} ${recipe.unit} of ${recipe.name}`)))));\n};\n\nIngredients.propTypes = {};\nexport default Ingredients;","map":{"version":3,"sources":["C:/frontend-total-performance/total-recipes/src/Components/Recipe/Ingredients.js"],"names":["React","Card","PropTypes","handleChange","event","props","console","log","target","value","Ingredients","ingredients","map","recipe","name","quantity","unit","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAaC,KAAzB;AAEH,CAHD;;AAKA,MAAMC,WAAW,GAAIL,KAAD,IAAW;AAE3B,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAsC,IAAA,QAAQ,EAAEF,YAAY,CAACE,KAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADA,eAKA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CALA,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMA,KAAK,CAACM,WAAN,CAAkBC,GAAlB,CAAuBC,MAAD,iBAAY;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0C,GAAEF,MAAM,CAACE,QAAS,IAAGF,MAAM,CAACG,IAAK,OAAMH,MAAM,CAACC,IAAK,EAA7F,CAAlC,CAFN,CANJ,CADJ,CADJ;AAeH,CAjBD;;AAmBAJ,WAAW,CAACO,SAAZ,GAAwB,EAAxB;AAKA,eAAeP,WAAf","sourcesContent":["import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst handleChange = (event, props) => {\r\n    console.log(event.target.value);\r\n\r\n}\r\n\r\nconst Ingredients = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <Card.Body> \r\n            <Card.Text>\r\n                Servings:\r\n                <input type=\"number\" className=\"ml-2\" onChange={handleChange(props)}/>\r\n            </Card.Text>\r\n            <Card.Text>To make this recipe you will need:</Card.Text>\r\n                <ul>\r\n                    {/* Improve key */}\r\n                    { props.ingredients.map((recipe) => <li key={recipe.name + recipe.quantity}>{`${recipe.quantity} ${recipe.unit} of ${recipe.name}`}</li>)}\r\n                </ul>\r\n            </Card.Body>\r\n        </div>\r\n    );\r\n}\r\n\r\nIngredients.propTypes = {\r\n    \r\n};\r\n\r\n\r\nexport default Ingredients;\r\n"]},"metadata":{},"sourceType":"module"}