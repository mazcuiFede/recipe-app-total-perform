{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend-total-performance\\\\total-recipes\\\\src\\\\Components\\\\Recipe\\\\Ingredients.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\n\nclass Ingredients extends Component {\n  constructor(props) {\n    super(props); //const { ingredients } = this.props\n\n    this.handleChange = event => {\n      let servings = event.target.value;\n      this.setState = {\n        servings: 2\n      };\n      console.log(this.state.servings);\n    };\n\n    this.state = {\n      servings: null // ingredients\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"Servings:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      className: \"ml-2\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"To make this recipe you will need:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nIngredients.propTypes = {};\nexport default Ingredients;","map":{"version":3,"sources":["C:/frontend-total-performance/total-recipes/src/Components/Recipe/Ingredients.js"],"names":["React","Component","Card","PropTypes","Ingredients","constructor","props","handleChange","event","servings","target","value","setState","console","log","state","render","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;;AAFc,SASlBC,YATkB,GASHC,KAAK,IAAI;AACpB,UAAIC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA5B;AAEA,WAAKC,QAAL,GAAiB;AACbH,QAAAA,QAAQ,EAAC;AADI,OAAjB;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWN,QAAvB;AACH,KAjBiB;;AAGd,SAAKM,KAAL,GAAc;AACVN,MAAAA,QAAQ,EAAE,IADA,CAEV;;AAFU,KAAd;AAIH;;AAYDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAsC,MAAA,QAAQ,EAAE,KAAKT,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADA,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,CADJ;AAeH;;AApC+B;;AAuCpCH,WAAW,CAACa,SAAZ,GAAwB,EAAxB;AAIA,eAAeb,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Ingredients extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        //const { ingredients } = this.props\r\n        this.state = ({\r\n            servings: null\r\n            // ingredients\r\n        })\r\n    }\r\n\r\n    handleChange = event => {\r\n        let servings = event.target.value\r\n        \r\n        this.setState = ({\r\n            servings:2\r\n        })\r\n\r\n        console.log(this.state.servings)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card.Text>\r\n                    Servings:\r\n                    <input type=\"number\" className=\"ml-2\" onChange={this.handleChange}/>\r\n                </Card.Text>\r\n                <Card.Body> \r\n                <Card.Text>To make this recipe you will need:</Card.Text>\r\n                    <ul>\r\n                        {/* Improve key */}\r\n                        {/* { this.state.ingredients.map((recipe) => <li key={recipe.name + recipe.quantity}>{`${recipe.quantity * this.state.servings} ${recipe.unit} of ${recipe.name}`}</li>)} */}\r\n                    </ul>\r\n                </Card.Body>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nIngredients.propTypes = {\r\n\r\n};\r\n\r\nexport default Ingredients;"]},"metadata":{},"sourceType":"module"}